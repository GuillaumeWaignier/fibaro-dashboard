# {{ ansible_managed }}
#!/bin/sh


LOGIN="{{ fibaro_login }}"
PASS="{{ fibaro_password }}"
URL="{{ fibaro_url }}"
ELASTICSEARCH_URL="{{ elasticsearch_url }}"
EVENTS_INDEX="{{ elasticsearch_index_events }}"

FILE_CACHED_DEVICE="{{ base_directory }}/fibaro/devices.csv"
FILE_CACHED_SCENE="{{ base_directory }}/fibaro/scenes.csv"

####################
# get all rooms    #
####################
getAllRooms() {
  rooms=`curl -H "Accept: application/json" -s -u ${LOGIN}:${PASS} ${URL}/api/rooms`
}

#############################
# Cache all devices         #
#############################
cacheAllDevice() {

  echo "Cache all devices"

  getAllRooms

  devices=`curl -s -u ${LOGIN}:${PASS} ${URL}/api/devices`
  deviceNumber=`echo "${devices}" | jq length`

  rm "${FILE_CACHED_DEVICE}"

  i=0
  while [ "$i" -lt "${deviceNumber}" ]
  do
    device=`echo "${devices}" | jq .[$i]`

    id=`echo "${device}" | jq .id`
    name=`echo "${device}" | jq -r .name`
    roomID=`echo "${device}" | jq .roomID`
    type=`echo "${device}" | jq -r .type`
    # workaround: space produce crash during ES indexation (pb of charset ?)
    name=`echo "${name}" | sed -e "s/ /_/g"`
    room=`echo "${rooms}" | jq -r "map(select(.id == ${roomID}))[].name"`

    echo "${id};${name};${room};${type}" >> "${FILE_CACHED_DEVICE}"

    i=$(( i + 1 ))
  done
}

#############################
# Cache all scenes          #
#############################
cacheAllScene() {

  echo "Cache all scenes"

  scenes=`curl -s -u ${LOGIN}:${PASS} ${URL}/api/scenes`
  sceneNumber=`echo "${scenes}" | jq length`

  rm "${FILE_CACHED_SCENE}"

  i=0
  while [ "$i" -lt "${sceneNumber}" ]
  do
    scene=`echo "${scenes}" | jq .[$i]`

    id=`echo "${scene}" | jq .id`
    name=`echo "${scene}" | jq -r .name`
    # workaround: space produce crash during ES indexation (pb of charset ?)
    name=`echo "${name}" | sed -e "s/ /_/g"`

    echo "${id};${name}" >> "${FILE_CACHED_SCENE}"

    i=$(( i + 1 ))
  done
}

#####################################
# enriched data with room and name  #
#####################################
enrichEvent() {

  eventType=`echo "${event}" | jq -r ".objects[0].type"`

  if [ "${eventType}" = "device" ]
  then
    id=`echo "${event}" | jq  .data.id`
    metainfo=`cat "${FILE_CACHED_DEVICE}" | grep "^${id};"`
    if [ ! -z "${metainfo}" ]
    then
      room=`echo "${metainfo}" | cut -d';' -f3`
      name=`echo "${metainfo}" | cut -d';' -f2`
      deviceType=`echo "${metainfo}" | cut -d';' -f4`
      metainfojson="\"name\":\"${name}\",\"room\":\"${room}\",\"deviceType\":\"${deviceType}\",\"sourceType\""

      event=`echo "${event}" | sed -e "s/\"sourceType\"/${metainfojson}/g"`
    fi
  elif [ "${eventType}" = "scene" ]
  then
    id=`echo "${event}" | jq  .data.id`
    metainfo=`cat "${FILE_CACHED_SCENE}" | grep "^${id};"`
    if [ ! -z "${metainfo}" ]
    then
      name=`echo "${metainfo}" | cut -d';' -f2`
      metainfojson="\"name\":\"${name}\",\"sourceType\""
      event=`echo "${event}" | sed -e "s/\"sourceType\"/${metainfojson}/g"`
    fi
  fi

  sourceType=`echo "${event}" | jq -r ".sourceType"`
  if [ "${sourceType}" = "device" ]
  then
    id=`echo "${event}" | jq  .sourceId`
    metainfo=`cat "${FILE_CACHED_DEVICE}" | grep "^${id};"`
    if [ ! -z "${metainfo}" ]
    then
      room=`echo "${metainfo}" | cut -d';' -f3`
      name=`echo "${metainfo}" | cut -d';' -f2`
      deviceType=`echo "${metainfo}" | cut -d';' -f4`
      metainfojson="\"sourceName\":\"${name}\",\"room\":\"${room}\",\"deviceType\":\"${deviceType}\",\"sourceType\""

      event=`echo "${event}" | sed -e "s/\"sourceType\"/${metainfojson}/g"`
    fi
  fi
}

#############################
# iterate over all events  #
#############################
iterateOverAllEvents() {

  if [ -z "${LAST_DATE}" ]
  then
    events=`curl -s -u ${LOGIN}:${PASS} "${URL}/api/events/history?numberOfRecords=200"`
  else
    events=`curl -s -u ${LOGIN}:${PASS} "${URL}/api/events/history?from=${LAST_DATE}&numberOfRecords=200"`
  fi

  eventsNumber=`echo "${events}" | jq length`

  i=0
  while [ "$i" -lt "${eventsNumber}" ]
  do
    event=`echo "${events}" | jq .[$i]`

    enrichEvent

    curl -s -H "Accept: application/json" -H "Content-Type: application/json" -XPOST ${ELASTICSEARCH_URL}/${EVENTS_INDEX}-alias/_doc -d "${event}" >> /dev/null

    i=$(( i + 1 ))
  done
}

##############################
# get last event id from ES  #
##############################
getLastEventID() {
  LAST_DATE=

  body='{"size":1,"sort":[{"timestamp": {"order": "desc"}}],"_source": "timestamp"}'
  res=`curl -s -H "Accept: application/json" -H "Content-Type: application/json" -XPOST ${ELASTICSEARCH_URL}/${EVENTS_INDEX}-alias/_search -d "${body}"`

  hits=`echo "${res}" | jq ".hits.hits"`
  hitsNumber=`echo "${hits}" | jq length`

  i=0
  while [ "$i" -lt "${hitsNumber}" ]
  do
    hit=`echo "${hits}" | jq .[$i]`
    LAST_DATE=`echo "${hit}" | jq ._source.timestamp`
    i=$(( i + 1 ))
  done
}


######

if [ ! -f "${FILE_CACHED_DEVICE}" ]
then
  cacheAllDevice
fi

if [ ! -f "${FILE_CACHED_SCENE}" ]
then
  cacheAllScene
fi

getLastEventID
iterateOverAllEvents
